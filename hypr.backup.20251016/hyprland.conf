################
# SUPRESS -- ubuntu
################
### MONITORS ###
################
# DP-2: Asus VG248 (144Hz capable)
monitor=DP-2,1920x1080@144,0x0,1
# DP-3: BenQ ZOWIE XL LCD (240Hz capable)
monitor=DP-3,1920x1080@240,1920x0,1

# Workspace to monitor bindings
workspace = 1, monitor:DP-2, default:true
workspace = 2, monitor:DP-2
workspace = 3, monitor:DP-2
workspace = 4, monitor:DP-3, default:true
workspace = 5, monitor:DP-3
workspace = 6, monitor:DP-3

###################
### MY PROGRAMS ###
###################
$terminal = kitty
$fileManager = thunar
$menu = rofi -show drun -theme ~/.config/rofi/config.rasi

#################
### AUTOSTART ###
#################
exec-once = ln -sf /run/user/1000/hypr /tmp/hypr
exec-once = waybar
exec-once = hyprpaper
exec-once = hypridle
exec-once = eww daemon
exec-once = ~/.config/eww/window-manager.sh
exec-once = rm -f /tmp/eww_temp_history

#############################
### ENVIRONMENT VARIABLES ###
#############################
env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24

# Nvidia-specific environment variables
env = LIBVA_DRIVER_NAME,nvidia
env = XDG_SESSION_TYPE,wayland
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = NVD_BACKEND,direct

# Hardware cursors (can fix cursor issues on Nvidia)
cursor {
    no_hardware_cursors = true
}

#####################
### LOOK AND FEEL ###
#####################
# Tokyo Night colors
$bg = rgb(1a1b26)
$fg = rgb(c0caf5)
$red = rgb(f7768e)
$green = rgb(9ece6a)
$yellow = rgb(e0af68)
$blue = rgb(7aa2f7)
$magenta = rgb(bb9af7)
$cyan = rgb(7dcfff)
$white = rgb(c0caf5)
$gray = rgb(414868)

general {
    gaps_in = 4
    gaps_out = 8
    border_size = 2
    col.active_border = $blue
    col.inactive_border = $gray
    resize_on_border = true
    allow_tearing = false
    layout = dwindle
}

decoration {
    rounding = 4
    
    #    shadow {
    #    enabled = true
    #    range = 4
    #    render_power = 3
    #    color = rgba(1a1b26ee)
    #}
    
    blur {
        enabled = true
        size = 3
        passes = 1
        vibrancy = 0.1696
    }
}

animations {
    enabled = false
}

dwindle {
    pseudotile = true
    preserve_split = true
}

master {
    new_status = master
}

misc {
    force_default_wallpaper = 0
    disable_hyprland_logo = true
}

#############
### INPUT ###
#############
input {
    kb_layout = us,dk
    kb_variant =
    kb_model =
    kb_options = caps:ctrl_modifier
    kb_rules =
    
    follow_mouse = 1
    sensitivity = 0
    
    touchpad {
        natural_scroll = false
    }
}

gestures {
    workspace_swipe = false
}

device {
    name = epic-mouse-v1
    sensitivity = -0.5
}

####################
### KEYBINDINGS ###
####################
$mainMod = SUPER

bind = $mainMod, Q, exec, $terminal
bind = $mainMod, C, killactive,
bind = $mainMod, M, exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, D, exec, $menu
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle

# Switch keyboard layout
bind = $mainMod, SPACE, exec, hyprctl switchxkblayout at-translated-set-2-keyboard next && hyprctl switchxkblayout pfu-limited-hhkb-hybrid next

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Move focus with mainMod + vim keys
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d

# Resize windows with mainMod + SHIFT + vim keys
binde = $mainMod SHIFT, h, resizeactive, -10 0
binde = $mainMod SHIFT, l, resizeactive, 10 0
binde = $mainMod SHIFT, k, resizeactive, 0 -10
binde = $mainMod SHIFT, j, resizeactive, 0 10

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Move current workspace to next/previous monitor
bind = $mainMod CTRL, right, moveworkspacetomonitor, +0 +1
bind = $mainMod CTRL, left, moveworkspacetomonitor, +0 -1
bind = $mainMod CTRL, l, moveworkspacetomonitor, +0 +1
bind = $mainMod CTRL, h, moveworkspacetomonitor, +0 -1

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Volume controls
bindl = , XF86AudioRaiseVolume, exec, sh -c 'pactl set-sink-volume @DEFAULT_SINK@ +5%; [ $(pactl get-sink-volume @DEFAULT_SINK@ | grep -o "[0-9]*%" | head -1 | tr -d "%") -gt 100 ] && pactl set-sink-volume @DEFAULT_SINK@ 100%'
bindl = , XF86AudioLowerVolume, exec, pactl set-sink-volume @DEFAULT_SINK@ -5%
bindl = , XF86AudioMute, exec, pactl set-sink-mute @DEFAULT_SINK@ toggle

# Brightness controls
bindl = , XF86MonBrightnessUp, exec, brightnessctl set 5%+
bindl = , XF86MonBrightnessDown, exec, brightnessctl set 5%-

# Media controls
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

# Screenshot (copy to clipboard)
bind = ALT SHIFT, S, exec, grim -g "$(slurp)" - | wl-copy -t image/png
bind = , Print, exec, grim - | wl-copy -t image/png

# Screenshot (save to file)
bind = ALT SHIFT, P, exec, grim -g "$(slurp)" ~/Pictures/Screenshots/screenshot-$(date +%Y%m%d-%H%M%S).png
bind = SHIFT, Print, exec, grim ~/Pictures/Screenshots/screenshot-$(date +%Y%m%d-%H%M%S).png

# Lock screen
bind = ALT, L, exec, hyprlock

# Tablet mode and rotation controls
bind = $mainMod, R, exec, ~/.config/eww/scripts/toggle-rotation.sh cycle
bind = $mainMod SHIFT, R, exec, ~/.config/eww/scripts/tablet-mode-monitor.sh toggle
bind = $mainMod CTRL, R, exec, ~/.config/eww/scripts/toggle-rotation.sh normal

# Lid switch handling
bindl = , switch:on:Lid Switch, exec, hyprlock & sleep 1 && systemctl suspend

##############################
### WINDOWS AND WORKSPACES ###
##############################
windowrule = suppressevent maximize, class:.*
windowrule = float, class:^(pavucontrol)$
windowrule = float, class:^(nm-connection-editor)$
windowrulev2 = float, class:^(blueman-manager)$
windowrulev2 = size 600 400, class:^(blueman-manager)$
windowrulev2 = minsize 400 300, class:^(blueman-manager)$
windowrule = float, class:^(gnome-calendar)$
windowrule = float, title:^(Picture-in-Picture)$
windowrule = pin, title:^(Picture-in-Picture)$
windowrulev2 = float, class:^(org.gnome.FileRoller)$
windowrulev2 = float, class:^(file-roller)$
windowrulev2 = float, class:^(org.gnome.Calculator)$
windowrulev2 = float, class:^(gnome-calculator)$

# Terminal transparency (alpha channel for background only)
windowrulev2 = opacity 0.90 alpha, class:^(org.wezfurlong.wezterm)$
windowrulev2 = opacity 0.90 alpha, class:^(wezterm)$
windowrulev2 = opacity 0.90 alpha, class:^(kitty)$
windowrulev2 = opacity 0.90 alpha, class:^(alacritty)$
windowrulev2 = opacity 0.90 alpha, class:^(foot)$
